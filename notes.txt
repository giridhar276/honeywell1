Everything in python is object
*** Every object contains set of methods ***


number
-------
number can be integer or decimal or octal or hexa 

aval = 10
bval = 34.43

string
--------
string is defined in single or double or triple quotes.

aname = 'python programming'
bname = "unix shell"
cname = """java programming"""
dname = '''scala programming'''




list  ( array in C )
------
list contains set of elements.
Elements can be numbers or strings or any combination.
list elements are defined in [].


alist = [10,20,30,40,50]
blist = ['java','oracle','python']
clist = [4,43.43,"java"]
dlist = [['java','unix'],['c','cpp'],['java','oracle']] # list of lists



tuple ( immutable , unchangeable , uneditable )
--------
tuple contains set of elements.
Elements can be numbers or strings or any combination.
tuple elements are defined in ().
*** Elements inside tuple cannot be modified DIRECTLY***

atup = (12,34,45,56,43,23,7)
btup = ("java",4,34.32,"unix")



dictionary ( map   hash   hashmap  json  associativearray )
---------------------------------------------------------
dictionary contains elements in the form of keys and values.
key can be number or string used to uniquely identify the value
value can be number or string or list or tuple or dictionary or
                 or dictionary of dictionaries or any complex structure

syntax:   object = { key:value , key:value  , key:value }
example:    book = {"chap1":10 ,"chap2": 20 ,"chap3":30 }
            info = {1:2,3:4,5:6}
            data = {"chap1":['Rita','US'] ,"chap2":['Ram','UK'] }



set
--------
set is UNORDERED collection of UNIQUE items of SAME type.

aset = {10,20,20,20,30,30}
bset = {30,30,30,40,40,50,50}








conditional statements
-----------------------------
simple if
if-else
if-elif-elif-elif-elif-else


control statements
-----------------
for loop
while loop


operators
-----------


arithmetic operators :   +  -   *    %    /

relational operators :   <  <=  >    >=   ==   !=

assignment operators ( ++ and -- are NOT allowed in python)

val = 10
val = val + 1    (or)   val+=1  

logical operators :    and    or    not
-----------------
name = 'python'
if len(name) ==6   and name.islower():
      ###

special operators :
-------------------
+ : concatenation operator  ( objects should be of type)
* :
in:
as:







 




















